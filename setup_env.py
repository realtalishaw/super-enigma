#!/usr/bin/env python3
"""
Setup environment variables for the workflow automation engine.
This script creates a .env file with the necessary configuration.
"""

import os
import sys
from pathlib import Path

def main():
    """Main setup function"""
    print("üöÄ Setting up environment for Workflow Automation Engine")
    print("=" * 60)
    
    # Get the project root directory
    project_root = Path(__file__).parent.absolute()
    env_file = project_root / ".env"
    
    # Check if .env already exists
    if env_file.exists():
        print(f"‚ö†Ô∏è  .env file already exists at {env_file}")
        response = input("Do you want to overwrite it? (y/N): ").strip().lower()
        if response != 'y':
            print("Setup cancelled.")
            return
    
    # Environment variables to set
    env_vars = {
        # MongoDB Database
        "DATABASE_URL": "mongodb+srv://dylan:43VFMVJVJUFAII9g@cluster0.8phbhhb.mongodb.net/weave-dev-db?retryWrites=true&w=majority",
        
        # Redis
        "REDIS_URL": "redis://localhost:6379",
        
        # Composio API
        "COMPOSIO_API_KEY": "your_composio_api_key_here",
        "COMPOSIO_BASE_URL": "https://api.composio.dev",
        
        # Anthropic API
        "ANTHROPIC_API_KEY": "your_anthropic_api_key_here",
        
        # Groq API
        "GROQ_API_KEY": "your_groq_api_key_here",
        
        # Application settings
        "DEBUG": "false",
        "LOG_LEVEL": "INFO",
        
        # Scheduler
        "SCHEDULER_URL": "http://localhost:8003",
        
        # API settings
        "API_HOST": "0.0.0.0",
        "API_PORT": "8000"
    }
    
    # Create .env file content
    env_content = "# Workflow Automation Engine Environment Variables\n"
    env_content += "# Generated by setup_env.py\n\n"
    
    for key, value in env_vars.items():
        env_content += f"{key}={value}\n"
    
    # Write .env file
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print(f"‚úÖ .env file created successfully at {env_file}")
        print("\nüìã Environment variables set:")
        
        for key, value in env_vars.items():
            if "KEY" in key and value != "your_composio_api_key_here":
                # Mask API keys for security
                masked_value = value[:8] + "..." if len(value) > 8 else "***"
                print(f"   {key}={masked_value}")
            else:
                print(f"   {key}={value}")
        
        print("\nüîß Next steps:")
        print("1. Update the API keys with your actual values")
        print("2. Ensure MongoDB is accessible")
        print("3. Ensure Redis is running")
        print("4. Run: python -m api.main")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
