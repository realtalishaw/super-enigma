{
  "run_timestamp": "2025-08-29T11:21:16.123851",
  "api_endpoint": "http://localhost:8001/api/suggestions:generate",
  "summary": {
    "total_cases": 15,
    "pass_rate_percent": 46.67,
    "average_latency_ms": 14093,
    "average_accuracy_on_pass": 0.1,
    "llm_data_coverage_percent": 0.0
  },
  "results": [
    {
      "case_id": "CASE_001_GMAIL_TO_SLACK_SIMPLE",
      "prompt": "When a new email arrives in my Gmail inbox, post the subject to the #general channel in Slack.",
      "latency_ms": 10352,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_002_STRIPE_MULTI_STEP",
      "prompt": "When a new customer pays via Stripe, add their name and email to a 'New Customers' Google Sheet, and then post a celebration message in the #sales channel on Slack.",
      "latency_ms": 14484,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_003_SOCIAL_MEDIA_VAGUE",
      "prompt": "Automate my social media presence by posting my new YouTube videos to my Twitter feed.",
      "latency_ms": 1514,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_004_SCHEDULING_DAILY_REPORT",
      "prompt": "Send me a daily summary of new high-priority issues from my GitHub repository to my email every morning at 8 AM.",
      "latency_ms": 15443,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: ['Unknown toolkit: github', 'Unknown toolkit: github']",
      "generated_dsl": {
        "workflow": {
          "name": "GitHub High Priority Issues Email Summary",
          "triggers": [
            {
              "id": "new_issue_trigger",
              "type": "event_based",
              "toolkit_slug": "github",
              "composio_trigger_slug": "GITHUB_ISSUE_ADDED_EVENT"
            }
          ],
          "actions": [
            {
              "id": "process_issue",
              "toolkit_slug": "github",
              "action_name": "GITHUB_ADD_LABELS_TO_AN_ISSUE",
              "required_inputs": [
                {
                  "name": "repository",
                  "source": "{{inputs.repository}}",
                  "type": "string"
                },
                {
                  "name": "issue_number",
                  "source": "{{trigger.issue_number}}",
                  "type": "string"
                },
                {
                  "name": "labels",
                  "source": "{{inputs.priority_labels}}",
                  "type": "array"
                }
              ],
              "depends_on": [
                "new_issue_trigger"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "74fe4795-fd9c-41f9-86a9-ea5a336a8f35",
            "title": "GitHub High Priority Issues Email Summary",
            "description": "Monitors for new GitHub issues and sends email notifications for high-priority items",
            "dsl_parametric": {
              "version": 1,
              "name": "GitHub High Priority Issues Email Summary",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "new_issue_trigger",
                "type": "event_based",
                "toolkit_slug": "github",
                "composio_trigger_slug": "GITHUB_ISSUE_ADDED_EVENT"
              },
              "actions": [
                {
                  "id": "process_issue",
                  "toolkit_slug": "github",
                  "action_name": "GITHUB_ADD_LABELS_TO_AN_ISSUE",
                  "required_inputs": [
                    {
                      "name": "repository",
                      "source": "{{inputs.repository}}",
                      "type": "string"
                    },
                    {
                      "name": "issue_number",
                      "source": "{{trigger.issue_number}}",
                      "type": "string"
                    },
                    {
                      "name": "labels",
                      "source": "{{inputs.priority_labels}}",
                      "type": "array"
                    }
                  ],
                  "depends_on": [
                    "new_issue_trigger"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.repository",
                "prompt": "What is your GitHub repository name (format: owner/repo)?",
                "type_hint": "string"
              },
              {
                "path": "inputs.priority_labels",
                "prompt": "What labels indicate a high-priority issue?",
                "type_hint": "array"
              },
              {
                "path": "inputs.email_address",
                "prompt": "What email address should receive the notifications?",
                "type_hint": "string"
              }
            ],
            "confidence": 0.8,
            "apps": [
              "github"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "GitHub High Priority Issues Email Summary",
                "description": "Monitors for new GitHub issues and sends email notifications for high-priority items",
                "triggers": [
                  {
                    "id": "new_issue_trigger",
                    "type": "event_based",
                    "toolkit_slug": "github",
                    "composio_trigger_slug": "GITHUB_ISSUE_ADDED_EVENT"
                  }
                ],
                "actions": [
                  {
                    "id": "process_issue",
                    "toolkit_slug": "github",
                    "action_name": "GITHUB_ADD_LABELS_TO_AN_ISSUE",
                    "required_inputs": [
                      {
                        "name": "repository",
                        "source": "{{inputs.repository}}",
                        "type": "string"
                      },
                      {
                        "name": "issue_number",
                        "source": "{{trigger.issue_number}}",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "source": "{{inputs.priority_labels}}",
                        "type": "array"
                      }
                    ],
                    "depends_on": [
                      "new_issue_trigger"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.repository",
                  "prompt": "What is your GitHub repository name (format: owner/repo)?",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "inputs.priority_labels",
                  "prompt": "What labels indicate a high-priority issue?",
                  "type": "array",
                  "required": true
                },
                {
                  "field": "inputs.email_address",
                  "prompt": "What email address should receive the notifications?",
                  "type": "string",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_005_DATA_TRANSFORMATION_AI",
      "prompt": "When I save a long article to Notion, use AI to summarize it and then add the summary as a comment to the Notion page.",
      "latency_ms": 13665,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'NOTION_FETCH_BLOCK_CONTENTS' in toolkit 'notion'\", \"Unknown action 'NOTION_CREATE_COMMENT' in toolkit 'notion'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "Notion Article Summarizer",
          "triggers": [
            {
              "id": "new_article_trigger",
              "type": "event_based",
              "toolkit_slug": "notion",
              "composio_trigger_slug": "NOTION_ALL_PAGE_EVENTS_TRIGGER"
            }
          ],
          "actions": [
            {
              "id": "fetch_content",
              "toolkit_slug": "notion",
              "action_name": "NOTION_FETCH_BLOCK_CONTENTS",
              "required_inputs": [
                {
                  "name": "block_id",
                  "source": "{{trigger.page_id}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "new_article_trigger"
              ]
            },
            {
              "id": "add_summary_comment",
              "toolkit_slug": "notion",
              "action_name": "NOTION_CREATE_COMMENT",
              "required_inputs": [
                {
                  "name": "parent_page_id",
                  "source": "{{trigger.page_id}}",
                  "type": "string"
                },
                {
                  "name": "comment_text",
                  "source": "{{middleware.summary}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "fetch_content"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "2f4a11ab-938f-42a3-bf26-cbf5e215701d",
            "title": "Notion Article Summarizer",
            "description": "Automatically summarizes articles saved to Notion and adds the summary as a comment",
            "dsl_parametric": {
              "version": 1,
              "name": "Notion Article Summarizer",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "new_article_trigger",
                "type": "event_based",
                "toolkit_slug": "notion",
                "composio_trigger_slug": "NOTION_ALL_PAGE_EVENTS_TRIGGER"
              },
              "actions": [
                {
                  "id": "fetch_content",
                  "toolkit_slug": "notion",
                  "action_name": "NOTION_FETCH_BLOCK_CONTENTS",
                  "required_inputs": [
                    {
                      "name": "block_id",
                      "source": "{{trigger.page_id}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "new_article_trigger"
                  ]
                },
                {
                  "id": "add_summary_comment",
                  "toolkit_slug": "notion",
                  "action_name": "NOTION_CREATE_COMMENT",
                  "required_inputs": [
                    {
                      "name": "parent_page_id",
                      "source": "{{trigger.page_id}}",
                      "type": "string"
                    },
                    {
                      "name": "comment_text",
                      "source": "{{middleware.summary}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "fetch_content"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [],
            "confidence": 1.0,
            "apps": [
              "notion"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "Notion Article Summarizer",
                "description": "Automatically summarizes articles saved to Notion and adds the summary as a comment",
                "triggers": [
                  {
                    "id": "new_article_trigger",
                    "type": "event_based",
                    "toolkit_slug": "notion",
                    "composio_trigger_slug": "NOTION_ALL_PAGE_EVENTS_TRIGGER"
                  }
                ],
                "actions": [
                  {
                    "id": "fetch_content",
                    "toolkit_slug": "notion",
                    "action_name": "NOTION_FETCH_BLOCK_CONTENTS",
                    "required_inputs": [
                      {
                        "name": "block_id",
                        "source": "{{trigger.page_id}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "new_article_trigger"
                    ]
                  },
                  {
                    "id": "add_summary_comment",
                    "toolkit_slug": "notion",
                    "action_name": "NOTION_CREATE_COMMENT",
                    "required_inputs": [
                      {
                        "name": "parent_page_id",
                        "source": "{{trigger.page_id}}",
                        "type": "string"
                      },
                      {
                        "name": "comment_text",
                        "source": "{{middleware.summary}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "fetch_content"
                    ]
                  }
                ]
              },
              "missing_information": [],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_006_FILE_HANDLING",
      "prompt": "When a new PDF is uploaded to my 'Contracts' folder in Google Drive, send a notification to the #legal channel in Slack.",
      "latency_ms": 15992,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'SLACK_CREATE_CHANNEL_BASED_CONVERSATION' in toolkit 'slack'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "PDF Upload Notification",
          "triggers": [
            {
              "id": "file_upload_trigger",
              "type": "event_based",
              "toolkit_slug": "slack",
              "composio_trigger_slug": "SLACK_RECEIVE_MESSAGE"
            }
          ],
          "actions": [
            {
              "id": "notification_action",
              "toolkit_slug": "slack",
              "action_name": "SLACK_CREATE_CHANNEL_BASED_CONVERSATION",
              "required_inputs": [
                {
                  "name": "channel_name",
                  "source": "{{inputs.channel_name}}",
                  "type": "string"
                },
                {
                  "name": "is_private",
                  "source": "false",
                  "type": "boolean"
                }
              ],
              "depends_on": [
                "file_upload_trigger"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "3735d640-c136-4f39-91f8-701b64516c70",
            "title": "PDF Upload Notification",
            "description": "Send Slack notification when PDF is uploaded to Google Drive Contracts folder",
            "dsl_parametric": {
              "version": 1,
              "name": "PDF Upload Notification",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "file_upload_trigger",
                "type": "event_based",
                "toolkit_slug": "slack",
                "composio_trigger_slug": "SLACK_RECEIVE_MESSAGE"
              },
              "actions": [
                {
                  "id": "notification_action",
                  "toolkit_slug": "slack",
                  "action_name": "SLACK_CREATE_CHANNEL_BASED_CONVERSATION",
                  "required_inputs": [
                    {
                      "name": "channel_name",
                      "source": "{{inputs.channel_name}}",
                      "type": "string"
                    },
                    {
                      "name": "is_private",
                      "source": "false",
                      "type": "boolean"
                    }
                  ],
                  "depends_on": [
                    "file_upload_trigger"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.channel_name",
                "prompt": "What should be the name of the Slack channel?",
                "type_hint": "string"
              }
            ],
            "confidence": 1.0,
            "apps": [
              "slack"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "PDF Upload Notification",
                "description": "Send Slack notification when PDF is uploaded to Google Drive Contracts folder",
                "triggers": [
                  {
                    "id": "file_upload_trigger",
                    "type": "event_based",
                    "toolkit_slug": "slack",
                    "composio_trigger_slug": "SLACK_RECEIVE_MESSAGE"
                  }
                ],
                "actions": [
                  {
                    "id": "notification_action",
                    "toolkit_slug": "slack",
                    "action_name": "SLACK_CREATE_CHANNEL_BASED_CONVERSATION",
                    "required_inputs": [
                      {
                        "name": "channel_name",
                        "source": "{{inputs.channel_name}}",
                        "type": "string"
                      },
                      {
                        "name": "is_private",
                        "source": "false",
                        "type": "boolean"
                      }
                    ],
                    "depends_on": [
                      "file_upload_trigger"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.channel_name",
                  "prompt": "What should be the name of the Slack channel?",
                  "type": "string",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_007_ECOMMERCE_SHOPIFY",
      "prompt": "When a new order is placed on Shopify for more than $100, add the customer to my 'VIP Customers' list in Mailchimp.",
      "latency_ms": 26526,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'SHOPIFY_GET_CUSTOMER_ORDERS' in toolkit 'shopify'\", 'Unknown toolkit: mailchimp']",
      "generated_dsl": {
        "workflow": {
          "name": "Add High-Value Customers to VIP List",
          "triggers": [
            {
              "id": "mailchimp_subscriber_trigger",
              "type": "event_based",
              "toolkit_slug": "mailchimp",
              "composio_trigger_slug": "MAILCHIMP_SUBSCRIBE_TRIGGER"
            }
          ],
          "actions": [
            {
              "id": "get_customer_orders",
              "toolkit_slug": "shopify",
              "action_name": "SHOPIFY_GET_CUSTOMER_ORDERS",
              "required_inputs": [
                {
                  "name": "customer_id",
                  "source": "{{inputs.customer_id}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "mailchimp_subscriber_trigger"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "e78722ad-0970-464f-9e94-3688b9559351",
            "title": "Add High-Value Customers to VIP List",
            "description": "When a Shopify order exceeds $100, add the customer to Mailchimp VIP list",
            "dsl_parametric": {
              "version": 1,
              "name": "Add High-Value Customers to VIP List",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "mailchimp_subscriber_trigger",
                "type": "event_based",
                "toolkit_slug": "mailchimp",
                "composio_trigger_slug": "MAILCHIMP_SUBSCRIBE_TRIGGER"
              },
              "actions": [
                {
                  "id": "get_customer_orders",
                  "toolkit_slug": "shopify",
                  "action_name": "SHOPIFY_GET_CUSTOMER_ORDERS",
                  "required_inputs": [
                    {
                      "name": "customer_id",
                      "source": "{{inputs.customer_id}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "mailchimp_subscriber_trigger"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.customer_id",
                "prompt": "Enter the Shopify customer ID",
                "type_hint": "string"
              },
              {
                "path": "inputs.mailchimp_list_id",
                "prompt": "Enter the Mailchimp VIP Customers list ID",
                "type_hint": "string"
              },
              {
                "path": "inputs.order_amount_threshold",
                "prompt": "Enter the order amount threshold (default: 100)",
                "type_hint": "number"
              }
            ],
            "confidence": 0.8,
            "apps": [
              "mailchimp",
              "shopify"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "Add High-Value Customers to VIP List",
                "description": "When a Shopify order exceeds $100, add the customer to Mailchimp VIP list",
                "triggers": [
                  {
                    "id": "mailchimp_subscriber_trigger",
                    "type": "event_based",
                    "toolkit_slug": "mailchimp",
                    "composio_trigger_slug": "MAILCHIMP_SUBSCRIBE_TRIGGER"
                  }
                ],
                "actions": [
                  {
                    "id": "get_customer_orders",
                    "toolkit_slug": "shopify",
                    "action_name": "SHOPIFY_GET_CUSTOMER_ORDERS",
                    "required_inputs": [
                      {
                        "name": "customer_id",
                        "source": "{{inputs.customer_id}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "mailchimp_subscriber_trigger"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.customer_id",
                  "prompt": "Enter the Shopify customer ID",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "inputs.mailchimp_list_id",
                  "prompt": "Enter the Mailchimp VIP Customers list ID",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "inputs.order_amount_threshold",
                  "prompt": "Enter the order amount threshold (default: 100)",
                  "type": "number",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_008_CRM_VAGUE_PROMPT",
      "prompt": "Help me manage my sales leads automatically.",
      "latency_ms": 1421,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_009_PRODUCTIVITY_SLACK_TO_TRELLO",
      "prompt": "If a message in our #bugs channel in Slack is reacted to with a \ud83d\udc1b emoji, create a new card in the 'Bugs' list on our Trello board.",
      "latency_ms": 14201,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_010_SINGLE_TOOL_WORKFLOW",
      "prompt": "Every time I receive an email in Gmail from 'billing@company.com', automatically apply the 'Finances' label to it.",
      "latency_ms": 14858,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'GMAIL_CREATE_LABEL' in toolkit 'gmail'\", \"Unknown action 'GMAIL_ADD_LABEL_TO_EMAIL' in toolkit 'gmail'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "Auto-Label Finance Emails",
          "triggers": [
            {
              "id": "new_email_trigger",
              "type": "event_based",
              "toolkit_slug": "gmail",
              "composio_trigger_slug": "GMAIL_NEW_GMAIL_MESSAGE"
            }
          ],
          "actions": [
            {
              "id": "create_label",
              "toolkit_slug": "gmail",
              "action_name": "GMAIL_CREATE_LABEL",
              "required_inputs": [
                {
                  "name": "label_name",
                  "source": "Finances",
                  "type": "string"
                }
              ],
              "depends_on": [
                "new_email_trigger"
              ]
            },
            {
              "id": "apply_label",
              "toolkit_slug": "gmail",
              "action_name": "GMAIL_ADD_LABEL_TO_EMAIL",
              "required_inputs": [
                {
                  "name": "message_id",
                  "source": "{{trigger.message_id}}",
                  "type": "string"
                },
                {
                  "name": "label_ids",
                  "source": "{{actions.create_label.label_id}}",
                  "type": "array"
                }
              ],
              "depends_on": [
                "create_label"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "d629f3f9-696e-4b8a-ac65-919f0d959daa",
            "title": "Auto-Label Finance Emails",
            "description": "Automatically applies Finances label to emails from billing@company.com",
            "dsl_parametric": {
              "version": 1,
              "name": "Auto-Label Finance Emails",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "new_email_trigger",
                "type": "event_based",
                "toolkit_slug": "gmail",
                "composio_trigger_slug": "GMAIL_NEW_GMAIL_MESSAGE"
              },
              "actions": [
                {
                  "id": "create_label",
                  "toolkit_slug": "gmail",
                  "action_name": "GMAIL_CREATE_LABEL",
                  "required_inputs": [
                    {
                      "name": "label_name",
                      "source": "Finances",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "new_email_trigger"
                  ]
                },
                {
                  "id": "apply_label",
                  "toolkit_slug": "gmail",
                  "action_name": "GMAIL_ADD_LABEL_TO_EMAIL",
                  "required_inputs": [
                    {
                      "name": "message_id",
                      "source": "{{trigger.message_id}}",
                      "type": "string"
                    },
                    {
                      "name": "label_ids",
                      "source": "{{actions.create_label.label_id}}",
                      "type": "array"
                    }
                  ],
                  "depends_on": [
                    "create_label"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [],
            "confidence": 1.0,
            "apps": [
              "gmail"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "Auto-Label Finance Emails",
                "description": "Automatically applies Finances label to emails from billing@company.com",
                "triggers": [
                  {
                    "id": "new_email_trigger",
                    "type": "event_based",
                    "toolkit_slug": "gmail",
                    "composio_trigger_slug": "GMAIL_NEW_GMAIL_MESSAGE"
                  }
                ],
                "actions": [
                  {
                    "id": "create_label",
                    "toolkit_slug": "gmail",
                    "action_name": "GMAIL_CREATE_LABEL",
                    "required_inputs": [
                      {
                        "name": "label_name",
                        "source": "Finances",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "new_email_trigger"
                    ]
                  },
                  {
                    "id": "apply_label",
                    "toolkit_slug": "gmail",
                    "action_name": "GMAIL_ADD_LABEL_TO_EMAIL",
                    "required_inputs": [
                      {
                        "name": "message_id",
                        "source": "{{trigger.message_id}}",
                        "type": "string"
                      },
                      {
                        "name": "label_ids",
                        "source": "{{actions.create_label.label_id}}",
                        "type": "array"
                      }
                    ],
                    "depends_on": [
                      "create_label"
                    ]
                  }
                ]
              },
              "missing_information": [],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_011_VAGUE_PROMPT_WITH_APPS",
      "prompt": "Handle new customers.",
      "latency_ms": 15021,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'STRIPE_CREATE_SUBSCRIPTION' in toolkit 'stripe'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "New Customer Handler",
          "triggers": [
            {
              "id": "checkout_completed",
              "type": "event_based",
              "toolkit_slug": "stripe",
              "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
            }
          ],
          "actions": [
            {
              "id": "create_customer",
              "toolkit_slug": "stripe",
              "action_name": "STRIPE_CREATE_CUSTOMER",
              "required_inputs": [
                {
                  "name": "email",
                  "source": "{{trigger.data.customer_email}}",
                  "type": "string"
                },
                {
                  "name": "name",
                  "source": "{{trigger.data.customer_name}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "checkout_completed"
              ]
            },
            {
              "id": "create_subscription",
              "toolkit_slug": "stripe",
              "action_name": "STRIPE_CREATE_SUBSCRIPTION",
              "required_inputs": [
                {
                  "name": "customer",
                  "source": "{{actions.create_customer.customer_id}}",
                  "type": "string"
                },
                {
                  "name": "price",
                  "source": "{{inputs.subscription_price_id}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "create_customer"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "d18f5308-3139-40dd-9004-16898444eff0",
            "title": "New Customer Handler",
            "description": "Handles new customer creation and setup in Stripe and Salesforce",
            "dsl_parametric": {
              "version": 1,
              "name": "New Customer Handler",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "checkout_completed",
                "type": "event_based",
                "toolkit_slug": "stripe",
                "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
              },
              "actions": [
                {
                  "id": "create_customer",
                  "toolkit_slug": "stripe",
                  "action_name": "STRIPE_CREATE_CUSTOMER",
                  "required_inputs": [
                    {
                      "name": "email",
                      "source": "{{trigger.data.customer_email}}",
                      "type": "string"
                    },
                    {
                      "name": "name",
                      "source": "{{trigger.data.customer_name}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "checkout_completed"
                  ]
                },
                {
                  "id": "create_subscription",
                  "toolkit_slug": "stripe",
                  "action_name": "STRIPE_CREATE_SUBSCRIPTION",
                  "required_inputs": [
                    {
                      "name": "customer",
                      "source": "{{actions.create_customer.customer_id}}",
                      "type": "string"
                    },
                    {
                      "name": "price",
                      "source": "{{inputs.subscription_price_id}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "create_customer"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.subscription_price_id",
                "prompt": "What is the Stripe Price ID for the subscription?",
                "type_hint": "string"
              }
            ],
            "confidence": 1.0,
            "apps": [
              "stripe"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "New Customer Handler",
                "description": "Handles new customer creation and setup in Stripe and Salesforce",
                "triggers": [
                  {
                    "id": "checkout_completed",
                    "type": "event_based",
                    "toolkit_slug": "stripe",
                    "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
                  }
                ],
                "actions": [
                  {
                    "id": "create_customer",
                    "toolkit_slug": "stripe",
                    "action_name": "STRIPE_CREATE_CUSTOMER",
                    "required_inputs": [
                      {
                        "name": "email",
                        "source": "{{trigger.data.customer_email}}",
                        "type": "string"
                      },
                      {
                        "name": "name",
                        "source": "{{trigger.data.customer_name}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "checkout_completed"
                    ]
                  },
                  {
                    "id": "create_subscription",
                    "toolkit_slug": "stripe",
                    "action_name": "STRIPE_CREATE_SUBSCRIPTION",
                    "required_inputs": [
                      {
                        "name": "customer",
                        "source": "{{actions.create_customer.customer_id}}",
                        "type": "string"
                      },
                      {
                        "name": "price",
                        "source": "{{inputs.subscription_price_id}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "create_customer"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.subscription_price_id",
                  "prompt": "What is the Stripe Price ID for the subscription?",
                  "type": "string",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_012_FAILURE_MISSING_ACTION",
      "prompt": "Post a message to our #deployments channel in Discord whenever a push is made to the main branch of our GitHub repository.",
      "latency_ms": 14214,
      "is_valid_schema": true,
      "accuracy_score": 0.67,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_013_SPECIFIC_AND_COMPLEX",
      "prompt": "When a Google Calendar event named 'Client Onboarding' is about to start, create a new Notion page for meeting notes from a template, and send a Slack DM to the attendees with the Notion page link.",
      "latency_ms": 35224,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'NOTION_CREATE_NOTION_PAGE' in toolkit 'notion'\", \"Unknown action 'NOTION_ADD_MULTIPLE_PAGE_CONTENT' in toolkit 'notion'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "Client Onboarding Meeting Notes Automation",
          "triggers": [
            {
              "id": "notion_page_trigger",
              "type": "event_based",
              "toolkit_slug": "notion",
              "composio_trigger_slug": "NOTION_PAGE_ADDED_TRIGGER"
            }
          ],
          "actions": [
            {
              "id": "create_notion_page",
              "toolkit_slug": "notion",
              "action_name": "NOTION_CREATE_NOTION_PAGE",
              "required_inputs": [
                {
                  "name": "parent_page_id",
                  "source": "{{inputs.parent_page_id}}",
                  "type": "string"
                },
                {
                  "name": "title",
                  "source": "Client Onboarding Meeting Notes",
                  "type": "string"
                }
              ],
              "depends_on": [
                "notion_page_trigger"
              ]
            },
            {
              "id": "add_template_content",
              "toolkit_slug": "notion",
              "action_name": "NOTION_ADD_MULTIPLE_PAGE_CONTENT",
              "required_inputs": [
                {
                  "name": "page_id",
                  "source": "{{create_notion_page.page_id}}",
                  "type": "string"
                },
                {
                  "name": "content",
                  "source": "{{inputs.template_content}}",
                  "type": "string"
                }
              ],
              "depends_on": [
                "create_notion_page"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "7ca6cbd6-4590-4b0c-a035-aa119f8fb699",
            "title": "Client Onboarding Meeting Notes Automation",
            "description": "Creates a Notion page for meeting notes and notifies attendees when Client Onboarding meeting starts",
            "dsl_parametric": {
              "version": 1,
              "name": "Client Onboarding Meeting Notes Automation",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "notion_page_trigger",
                "type": "event_based",
                "toolkit_slug": "notion",
                "composio_trigger_slug": "NOTION_PAGE_ADDED_TRIGGER"
              },
              "actions": [
                {
                  "id": "create_notion_page",
                  "toolkit_slug": "notion",
                  "action_name": "NOTION_CREATE_NOTION_PAGE",
                  "required_inputs": [
                    {
                      "name": "parent_page_id",
                      "source": "{{inputs.parent_page_id}}",
                      "type": "string"
                    },
                    {
                      "name": "title",
                      "source": "Client Onboarding Meeting Notes",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "notion_page_trigger"
                  ]
                },
                {
                  "id": "add_template_content",
                  "toolkit_slug": "notion",
                  "action_name": "NOTION_ADD_MULTIPLE_PAGE_CONTENT",
                  "required_inputs": [
                    {
                      "name": "page_id",
                      "source": "{{create_notion_page.page_id}}",
                      "type": "string"
                    },
                    {
                      "name": "content",
                      "source": "{{inputs.template_content}}",
                      "type": "string"
                    }
                  ],
                  "depends_on": [
                    "create_notion_page"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.parent_page_id",
                "prompt": "What is the ID of the parent Notion page where meeting notes should be created?",
                "type_hint": "string"
              },
              {
                "path": "inputs.template_content",
                "prompt": "What is the template content for the meeting notes?",
                "type_hint": "string"
              },
              {
                "path": "google_calendar_integration",
                "prompt": "Google Calendar integration is required but not available in current tools",
                "type_hint": "string"
              },
              {
                "path": "slack_dm_integration",
                "prompt": "Slack DM capability is required but not available in current tools",
                "type_hint": "string"
              }
            ],
            "confidence": 0.8,
            "apps": [
              "notion"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "Client Onboarding Meeting Notes Automation",
                "description": "Creates a Notion page for meeting notes and notifies attendees when Client Onboarding meeting starts",
                "triggers": [
                  {
                    "id": "notion_page_trigger",
                    "type": "event_based",
                    "toolkit_slug": "notion",
                    "composio_trigger_slug": "NOTION_PAGE_ADDED_TRIGGER"
                  }
                ],
                "actions": [
                  {
                    "id": "create_notion_page",
                    "toolkit_slug": "notion",
                    "action_name": "NOTION_CREATE_NOTION_PAGE",
                    "required_inputs": [
                      {
                        "name": "parent_page_id",
                        "source": "{{inputs.parent_page_id}}",
                        "type": "string"
                      },
                      {
                        "name": "title",
                        "source": "Client Onboarding Meeting Notes",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "notion_page_trigger"
                    ]
                  },
                  {
                    "id": "add_template_content",
                    "toolkit_slug": "notion",
                    "action_name": "NOTION_ADD_MULTIPLE_PAGE_CONTENT",
                    "required_inputs": [
                      {
                        "name": "page_id",
                        "source": "{{create_notion_page.page_id}}",
                        "type": "string"
                      },
                      {
                        "name": "content",
                        "source": "{{inputs.template_content}}",
                        "type": "string"
                      }
                    ],
                    "depends_on": [
                      "create_notion_page"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.parent_page_id",
                  "prompt": "What is the ID of the parent Notion page where meeting notes should be created?",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "inputs.template_content",
                  "prompt": "What is the template content for the meeting notes?",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "google_calendar_integration",
                  "prompt": "Google Calendar integration is required but not available in current tools",
                  "type": "string",
                  "required": true
                },
                {
                  "field": "slack_dm_integration",
                  "prompt": "Slack DM capability is required but not available in current tools",
                  "type": "string",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_014_UNSUPPORTED_GRACEFUL_FAIL",
      "prompt": "Send me a WhatsApp message every morning with the top story from Hacker News.",
      "latency_ms": 1425,
      "is_valid_schema": true,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": null,
      "generated_dsl": {
        "suggestions": []
      },
      "api_response": {
        "suggestions": []
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    },
    {
      "case_id": "CASE_015_WEEKLY_SCHEDULE",
      "prompt": "Every Friday, get the total number of new customers from Stripe this week and post it to the #weekly-summary Slack channel.",
      "latency_ms": 17058,
      "is_valid_schema": false,
      "accuracy_score": 0.0,
      "steps_generated": 0,
      "error_message": "Validation Failed: [\"Unknown action 'STRIPE_LIST_CUSTOMERS' in toolkit 'stripe'\"]",
      "generated_dsl": {
        "workflow": {
          "name": "Weekly Stripe Customer Count",
          "triggers": [
            {
              "id": "list_customers_trigger",
              "type": "event_based",
              "toolkit_slug": "stripe",
              "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
            }
          ],
          "actions": [
            {
              "id": "list_customers",
              "toolkit_slug": "stripe",
              "action_name": "STRIPE_LIST_CUSTOMERS",
              "required_inputs": [
                {
                  "name": "created",
                  "source": "{{inputs.created_after}}",
                  "type": "object"
                },
                {
                  "name": "limit",
                  "source": "100",
                  "type": "number"
                }
              ],
              "depends_on": [
                "list_customers_trigger"
              ]
            }
          ]
        }
      },
      "api_response": {
        "suggestions": [
          {
            "suggestion_id": "0c33d4a8-0fff-43be-8ceb-3972bd3f0409",
            "title": "Weekly Stripe Customer Count",
            "description": "Retrieves new Stripe customers count weekly",
            "dsl_parametric": {
              "version": 1,
              "name": "Weekly Stripe Customer Count",
              "connections": {},
              "consent": null,
              "trigger": {
                "id": "list_customers_trigger",
                "type": "event_based",
                "toolkit_slug": "stripe",
                "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
              },
              "actions": [
                {
                  "id": "list_customers",
                  "toolkit_slug": "stripe",
                  "action_name": "STRIPE_LIST_CUSTOMERS",
                  "required_inputs": [
                    {
                      "name": "created",
                      "source": "{{inputs.created_after}}",
                      "type": "object"
                    },
                    {
                      "name": "limit",
                      "source": "100",
                      "type": "number"
                    }
                  ],
                  "depends_on": [
                    "list_customers_trigger"
                  ]
                }
              ],
              "error_policy": null,
              "observability": null
            },
            "missing_fields": [
              {
                "path": "inputs.created_after",
                "prompt": "Enter the timestamp to filter customers created after this date",
                "type_hint": "string"
              }
            ],
            "confidence": 1.0,
            "apps": [
              "stripe"
            ],
            "source": "generator",
            "full_workflow_json": {
              "schema_type": "template",
              "workflow": {
                "name": "Weekly Stripe Customer Count",
                "description": "Retrieves new Stripe customers count weekly",
                "triggers": [
                  {
                    "id": "list_customers_trigger",
                    "type": "event_based",
                    "toolkit_slug": "stripe",
                    "composio_trigger_slug": "STRIPE_CHECKOUT_SESSION_COMPLETED_TRIGGER"
                  }
                ],
                "actions": [
                  {
                    "id": "list_customers",
                    "toolkit_slug": "stripe",
                    "action_name": "STRIPE_LIST_CUSTOMERS",
                    "required_inputs": [
                      {
                        "name": "created",
                        "source": "{{inputs.created_after}}",
                        "type": "object"
                      },
                      {
                        "name": "limit",
                        "source": "100",
                        "type": "number"
                      }
                    ],
                    "depends_on": [
                      "list_customers_trigger"
                    ]
                  }
                ]
              },
              "missing_information": [
                {
                  "field": "inputs.created_after",
                  "prompt": "Enter the timestamp to filter customers created after this date",
                  "type": "string",
                  "required": true
                }
              ],
              "confidence": 80
            }
          }
        ]
      },
      "llm_inputs": null,
      "llm_outputs": null,
      "groq_api_calls": null,
      "claude_api_calls": null
    }
  ]
}